import React from "react";
// 函数组件的创建和渲染
// // 创建
// 如何传递自定义参数？
// // 1、只需要一个自定义参数 {clickHandle} 写成 {()=>clickHandle('自定义参数')}
// // 2、既需要e，也要自定义参数时 {(e)=>clickHandle(e,'自定义参数')}
function Hello() { // 函数组件（又称无状态组件）
    // // // onClick：绑定点击事件
    const clickHandler = () => {
        console.log("函数组件中的点击事件被触发到");
    };
    const clickHandler1 = (e, msg) => {
        // 事件对象e： 可用于阻止对象冒泡等行为
        e.preventDefault();
        console.log("函数组件中的点击事件被触发到", e, msg);
    };
    return (
        <div onClick={clickHandler}>
            hello
            <a
                onClick={(e) => clickHandler1(e, "this is msg")}
                href="https://www.baidu.com"
            >
                百度
            </a>
        </div>
    );
}
// // 渲染<Hello/>

// 类组件的创建和渲染
// // 创建
class HelloComponent extends React.Component {
    // 事件回调函数（标准写法：避免this的指向问题，在回调函数中的this指向当前组件的事件对象）
    clickHandler = (e) => {
        console.log("类组件中的事件被触发到", e);
    };
    render() {
        return <div onClick={this.clickHandler}>this is class Component</div>;
    }
    }
    // // 渲染 <HelloComponent/> 或者 <HelloComponent></HelloComponent>
    function App() {
    return (
        <div className="App">
        {/* 渲染hello组件 */}
        <Hello></Hello>
        {/* 渲染类组件 */}
        <HelloComponent></HelloComponent>
        </div>
    );
}

export default App;
